class Solution {
public:
 ListNode* reverseList(ListNode* head) {
        ListNode* prev = NULL;
        ListNode* current = head;
        ListNode* Next = NULL;
        while(current){
            Next = current->next;
            current->next = prev;
            prev = current;
            current = Next;
        }
        return prev;
    }
    bool isPalindrome(ListNode* head) {
       ListNode* c = new ListNode(0);
       ListNode* tempC = c;
       ListNode* temp = head;
       while(temp){
        ListNode* node = new ListNode(temp->val);
        tempC->next = node;
        temp = temp->next;
        tempC = tempC->next;
       }
       c = c->next;
       c = reverseList(c);
       ListNode* a = head;
       ListNode* b = c;
       while(a){
        if(a->val!=b->val) return false;
        a = a->next;
        b = b->next;
       }
       return true;
    }
};
