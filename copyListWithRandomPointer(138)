class Solution {
public:
    Node* copyRandomList(Node* head) {
       Node* dummy = new Node(0);
       Node* tempC = dummy;
       Node* temp = head;
       // deep copy without random
       while(temp){
        Node* a = new Node(temp->val);
        tempC->next = a;
        tempC = tempC->next;
        temp = temp->next;
       } 
       Node* duplicate = dummy->next;
       // alternate connections
       Node* a = head;
       Node* b = duplicate;
       dummy = new Node(-1);
       Node* tempD = dummy;
       while(a){
        tempD->next = a;
        a = a->next;
        tempD  = tempD->next;
        tempD->next = b;
        b = b->next;
        tempD = tempD->next;
       }
    dummy = dummy->next ; 
    // making alternate connnections
     Node* t1 = dummy;
     Node* t2;
     while(t1){
        t2 = t1->next;
        if(t1->random) t2->random = t1->random->next;
        t1 = t1->next->next;
     }
     // removing the connections
    Node* d1 = new Node(-1);
    Node* d2 = new Node(-1);
    Node* temp1 = d1;
    Node* temp2 = d2;
    Node* t = dummy;
    while(t){
        temp1->next = t;
        t = t->next;
        temp1 = temp1->next;
        temp2->next = t;
        t = t->next;
        temp2 = temp2->next;
    }
  temp1->next = NULL;
  temp2->next = NULL;
  d1 = d1->next;
  d2 = d2->next;
  return d2;

    }
};
