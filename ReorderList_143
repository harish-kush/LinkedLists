
class Solution {
public:
 ListNode* reverseList(ListNode* head) {
        ListNode* prev = NULL;
        ListNode* current = head;
        ListNode* Next = NULL;
        while(current){
            Next = current->next;
            current->next = prev;
            prev = current;
            current = Next;
        }
        return prev;
    }
    void reorderList(ListNode* head) {
        ListNode* slow = head;
        ListNode* fast = head;
        while(fast->next!=NULL && fast->next->next!=NULL){
            slow = slow->next;
            fast = fast->next->next;
        }
        ListNode* a = head;
        ListNode* b = reverseList(slow->next);
        slow->next = NULL;
        ListNode* c = new ListNode(100);
        ListNode* tempA = a;
        ListNode* tempB = b;
        ListNode* tempC = c;
        while(tempA && tempB){
            tempC->next = tempA;
            tempA = tempA->next;
            tempC = tempC->next;
            tempC->next = tempB;
            tempB = tempB->next;
            tempC = tempC->next;
        }   
        tempC->next = tempA;
        head = c->next;
         }
};
