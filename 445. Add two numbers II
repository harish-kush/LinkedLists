
class Solution {
public:
    ListNode* reverse(ListNode* head){
        if(head->next==nullptr) return head;
        ListNode* prev = nullptr;
        ListNode* curr = head;
        ListNode* next = nullptr;
        while(curr){
            next = curr->next;
            curr->next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* a = reverse(l1);
        ListNode* b = reverse(l2);
        ListNode* dummy = new ListNode(0);
        ListNode* tc = dummy;
        int carry = 0;
        while(a || b || carry){
            int val1 = (a)?(a->val):0;
            int val2 = (b)?(b->val):0;
            int currSum = val1 + val2 + carry;
            carry = currSum/10;
            int lastDigit = currSum%10;
            ListNode* digit = new ListNode(lastDigit);
            tc->next = digit;
            tc = tc->next;
           if(a) a = a->next;
           if(b) b = b->next;
        }
        return reverse(dummy->next);
    }
};
